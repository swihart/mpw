[{"path":"https://swihart.github.io/mpw/articles/alpha.html","id":"two-knots","dir":"Articles","previous_headings":"","what":"Two knots","title":"Weibull-Weibull-Positive Stable","text":"","code":"tvec.in <- c(5, 90+21) tvec.in #> [1]   5 111"},{"path":[]},{"path":"https://swihart.github.io/mpw/articles/alpha.html","id":"fit-for-placebo-group","dir":"Articles","previous_headings":"Two knots > Two step fitting procedure","what":"1. Fit for placebo group","title":"Weibull-Weibull-Positive Stable","text":"","code":"fit_F_alpha <- function(x){mean((popavg_dist(time,                                              knots= tvec.in,                                              logk0=x[1],                                              g0=x[2],                                              delta_vec=x[-c(1,2)],                                             h_parm = H_PARM,                                             frailty=FRAILTY)  - F0)^2) }  init.vals <- c(log(2.4), -10, rep( 0,length(tvec.in))) plac_fit_F_alpha <-    optim(init.vals, fit_F_alpha,         method=\"Nelder-Mead\",         control=list(maxit=1e8)) print(plac_fit_F_alpha) #> $par #> [1]  -0.8590240 -11.5514302   1.6053115  -0.3700213 #>  #> $value #> [1] 1.574351e-06 #>  #> $counts #> function gradient  #>      167       NA  #>  #> $convergence #> [1] 0 #>  #> $message #> NULL  logk0p = plac_fit_F_alpha$par[1] g0p = plac_fit_F_alpha$par[2] delta_vec_p =plac_fit_F_alpha$par[-1*c(1,2)]"},{"path":"https://swihart.github.io/mpw/articles/alpha.html","id":"fit-for-vaccine-group","dir":"Articles","previous_headings":"Two knots > Two step fitting procedure","what":"2. Fit for vaccine group","title":"Weibull-Weibull-Positive Stable","text":"Now take logk0p g0p, parameters control first (leftmost) piece placebo group use logk0v g0v estimating pieces vaccine group. forces first pieces groups (.e. ramp-time).","code":"fit_F_alpha <- function(x){mean((popavg_dist(time,                                              knots= tvec.in,                                              logk0=logk0p,                                              g0=g0p,                                              delta_vec=x,                                             h_parm = H_PARM,                                             frailty=FRAILTY)  - F1)^2) }  init.vals <- rep( 0,length(tvec.in)) vacc_fit_F_alpha <-    optim(init.vals, fit_F_alpha,         method=\"Nelder-Mead\",         control=list(maxit=1e8)) print(vacc_fit_F_alpha) #> $par #> [1] 0.6274834 0.9321016 #>  #> $value #> [1] 1.41648e-07 #>  #> $counts #> function gradient  #>       75       NA  #>  #> $convergence #> [1] 0 #>  #> $message #> NULL  logk0v = logk0p g0v = g0p delta_vec_v =vacc_fit_F_alpha$par"},{"path":"https://swihart.github.io/mpw/articles/alpha.html","id":"plot-population-avg-cdf","dir":"Articles","previous_headings":"Two knots","what":"Plot population avg CDF","title":"Weibull-Weibull-Positive Stable","text":"Quick check fit use knots original time time.dist quick check fit. put vertical dashed lines plot denote knot placement.  Note Days 0 5 curves .","code":"time.dist <- seq(min(c(time, tvec.in)), max(c(time, tvec.in)), 0.1) plac.dist <- popavg_dist(      x = time.dist,                             knots = tvec.in,                            logk0 = logk0p,                               g0 = g0p,                        delta_vec = delta_vec_p,                           h_parm = H_PARM,                          frailty = FRAILTY)  vacc.dist <- popavg_dist(      x = time.dist,                             knots = tvec.in,                            logk0 = logk0v,                               g0 = g0v,                        delta_vec = delta_vec_v,                           h_parm = H_PARM,                          frailty = FRAILTY)    plot  (time.dist, plac.dist, type=\"l\", col=\"black\", xlab=\"Days\", ylab=\"CDF\") points(time     , F0       , col=\"black\", pch=15) lines (time.dist, vacc.dist, col=\"blue\") points(time     , F1, col=\"blue\", pch=16) abline(v=tvec.in, lty=2, col=\"grey\") legend(\"topleft\", c(\"Placebo\", \"Vaccine\"),        col=c(\"black\",\"blue\"),        lty=1,        pch=c(15,16) ) axis(1, at=c(tvec.in[1]))"},{"path":"https://swihart.github.io/mpw/articles/alpha.html","id":"plot-population-avg-hr","dir":"Articles","previous_headings":"Two knots","what":"Plot population avg HR","title":"Weibull-Weibull-Positive Stable","text":"uses parameters two step fitting procedure HR(0) = 1 use parameters previous fits estimate population average hazard, can fit mpw::popavg_haz(). adjust time input first element just 0.","code":"time.haz <- c(1e-4, time.dist[-1]) plac.haz <- popavg_haz(      x = time.haz,                             knots = tvec.in,                            logk0 = logk0p,                               g0 = g0p,                        delta_vec = delta_vec_p,                           h_parm = H_PARM,                          frailty = FRAILTY)  vacc.haz <- popavg_haz(      x = time.haz,                             knots = tvec.in,                            logk0 = logk0v,                               g0 = g0v,                        delta_vec = delta_vec_v,                           h_parm = H_PARM,                          frailty = FRAILTY)  plot  (time.haz, vacc.haz/plac.haz, type=\"l\", col=\"purple\", xlab=\"Days\",        ylab=\"Hazard Ratio\", lwd=2)  abline(v=tvec.in, lty=2, col=\"grey\")  axis(1, at=c(tvec.in[1]))"},{"path":"https://swihart.github.io/mpw/articles/alpha.html","id":"add-subject-specific-hrs","dir":"Articles","previous_headings":"Two knots","what":"Add subject-specific HRs","title":"Weibull-Weibull-Positive Stable","text":"flatten function mpw::subjspec_haz() require arguments frailty h_parm takes inputs b,k, delta pieces models subject-specific (aka conditional) hazard. placebo group, vaccine group dividing gives subject-specific hazard ratio (HR).  plot shows positive-stable frailty α\\alpha = 0.72 subject-specific HR flatter lower population average HR.","code":"plac.haz.ss <- subjspec_haz(      x = time.haz,                             knots = tvec.in,                            logk0 = logk0p,                               g0 = g0p,                        delta_vec = delta_vec_p)  vacc.haz.ss <- popavg_haz(      x = time.haz,                             knots = tvec.in,                            logk0 = logk0v,                               g0 = g0v,                        delta_vec = delta_vec_v)  plot  (time.haz, vacc.haz/plac.haz, type=\"l\", col=\"purple\", xlab=\"Days\",        ylab=\"Hazard Ratio\", lwd=2)  axis(1, at=c(tvec.in[1]))  lines  (time.haz, vacc.haz.ss/plac.haz.ss, type=\"l\", col=\"gold\", xlab=\"Days\",         lwd=2, lty=2) legend(\"topright\", c(\"Population HR\", \"Subject-specific HR\"),        col=c(\"purple\",\"gold\"),        lty=c(1,2),        lwd=2 )"},{"path":"https://swihart.github.io/mpw/articles/alpha.html","id":"sixteen-knots","dir":"Articles","previous_headings":"","what":"Sixteen knots","title":"Weibull-Weibull-Positive Stable","text":"increasing knots, get “higher resolution” fit.","code":"tvec.in <- c(5, seq(14,max(time)-14,length.out=14),max(time)-7) tvec.in #>  [1]   5.00000  14.00000  26.92308  39.84615  52.76923  65.69231  78.61538 #>  [8]  91.53846 104.46154 117.38462 130.30769 143.23077 156.15385 169.07692 #> [15] 182.00000 189.00000"},{"path":[]},{"path":"https://swihart.github.io/mpw/articles/alpha.html","id":"fit-for-placebo-group-1","dir":"Articles","previous_headings":"Sixteen knots > Two step fitting procedure","what":"1. Fit for placebo group","title":"Weibull-Weibull-Positive Stable","text":"","code":"fit_F_alpha <- function(x){mean((popavg_dist(time,                                              knots= tvec.in,                                              logk0=x[1],                                              g0=x[2],                                              delta_vec=x[-c(1,2)],                                             h_parm = H_PARM,                                             frailty=FRAILTY)  - F0)^2) }  init.vals <- c(log(2.4), -10, rep( 0,length(tvec.in))) plac_fit_F_alpha <-    optim(init.vals, fit_F_alpha,         method=\"Nelder-Mead\",         control=list(maxit=1e8)) print(plac_fit_F_alpha) #> $par #>  [1]  -0.19809428 -10.00290490  -0.46528979   1.50975780  -0.41049204 #>  [6]   0.13659323   0.10835991   0.26344501   0.18239172  -0.08269246 #> [11]  -0.07470972   0.19303094   0.05622029  -0.55575772  -0.99909140 #> [16]   0.53537197   0.38629201   0.88779139 #>  #> $value #> [1] 2.366405e-07 #>  #> $counts #> function gradient  #>      909       NA  #>  #> $convergence #> [1] 0 #>  #> $message #> NULL  logk0p = plac_fit_F_alpha$par[1] g0p = plac_fit_F_alpha$par[2] delta_vec_p =plac_fit_F_alpha$par[-1*c(1,2)]"},{"path":"https://swihart.github.io/mpw/articles/alpha.html","id":"fit-for-vaccine-group-1","dir":"Articles","previous_headings":"Sixteen knots > Two step fitting procedure","what":"2. Fit for vaccine group","title":"Weibull-Weibull-Positive Stable","text":"Now take logk0p g0p, parameters control first (leftmost) piece placebo group use logk0v g0v estimating pieces vaccine group. forces first pieces groups (.e. ramp-time).","code":"fit_F_alpha <- function(x){mean((popavg_dist(time,                                              knots= tvec.in,                                              logk0=logk0p,                                              g0=g0p,                                              delta_vec=x,                                             h_parm = H_PARM,                                             frailty=FRAILTY)  - F1)^2) }  init.vals <- rep( 0,length(tvec.in)) vacc_fit_F_alpha <-    optim(init.vals, fit_F_alpha,         method=\"Nelder-Mead\",         control=list(maxit=1e8)) print(vacc_fit_F_alpha) #> $par #>  [1] -0.80982557 -0.01045652  0.62457154 -0.33277056 -0.21486434  0.42390586 #>  [7]  1.31843225 -0.36908115  1.26785248 -0.74096065  0.23847180 -0.30173673 #> [13] -0.44639190 -0.40910808  1.19813727  0.38037584 #>  #> $value #> [1] 1.488447e-08 #>  #> $counts #> function gradient  #>     2483       NA  #>  #> $convergence #> [1] 0 #>  #> $message #> NULL  logk0v = logk0p g0v = g0p delta_vec_v =vacc_fit_F_alpha$par"},{"path":"https://swihart.github.io/mpw/articles/alpha.html","id":"plot-population-avg-cdf-1","dir":"Articles","previous_headings":"Sixteen knots","what":"Plot population avg CDF","title":"Weibull-Weibull-Positive Stable","text":"Quick check fit use knots original time time.dist quick check fit. put vertical dashed lines plot denote knot placement.  Note Days 0 5 curves .","code":"time.dist <- seq(min(c(time, tvec.in)), max(c(time, tvec.in)), 0.1) plac.dist <- popavg_dist(      x = time.dist,                             knots = tvec.in,                            logk0 = logk0p,                               g0 = g0p,                        delta_vec = delta_vec_p,                           h_parm = H_PARM,                          frailty = FRAILTY)  vacc.dist <- popavg_dist(      x = time.dist,                             knots = tvec.in,                            logk0 = logk0v,                               g0 = g0v,                        delta_vec = delta_vec_v,                           h_parm = H_PARM,                          frailty = FRAILTY)    plot  (time.dist, plac.dist, type=\"l\", col=\"black\", xlab=\"Days\", ylab=\"CDF\") points(time     , F0       , col=\"black\", pch=15) lines (time.dist, vacc.dist, col=\"blue\") points(time     , F1, col=\"blue\", pch=16) abline(v=tvec.in, lty=2, col=\"grey\") legend(\"topleft\", c(\"Placebo\", \"Vaccine\"),        col=c(\"black\",\"blue\"),        lty=1,        pch=c(15,16) ) axis(1, at=c(tvec.in[1]))"},{"path":"https://swihart.github.io/mpw/articles/alpha.html","id":"plot-population-avg-hr-1","dir":"Articles","previous_headings":"Sixteen knots","what":"Plot population avg HR","title":"Weibull-Weibull-Positive Stable","text":"uses parameters two step fitting procedure HR(0) = 1 use parameters previous fits estimate population average hazard, can fit mpw::popavg_haz(). adjust time input first element just 0.","code":"time.haz <- c(1e-4, time.dist[-1]) plac.haz <- popavg_haz(      x = time.haz,                             knots = tvec.in,                            logk0 = logk0p,                               g0 = g0p,                        delta_vec = delta_vec_p,                           h_parm = H_PARM,                          frailty = FRAILTY)  vacc.haz <- popavg_haz(      x = time.haz,                             knots = tvec.in,                            logk0 = logk0v,                               g0 = g0v,                        delta_vec = delta_vec_v,                           h_parm = H_PARM,                          frailty = FRAILTY)  plot  (time.haz, vacc.haz/plac.haz, type=\"l\", col=\"purple\", xlab=\"Days\", ylab=\"Hazard Ratio\", lwd=2)  abline(v=tvec.in, lty=2, col=\"grey\")  axis(1, at=c(tvec.in[1]))"},{"path":"https://swihart.github.io/mpw/articles/alpha.html","id":"add-subject-specific-hrs-1","dir":"Articles","previous_headings":"Sixteen knots","what":"Add subject-specific HRs","title":"Weibull-Weibull-Positive Stable","text":"flatten function mpw::subjspec_haz() require arguments frailty h_parm takes inputs b,k, delta pieces models subject-specific (aka conditional) hazard. placebo group, vaccine group dividing gives subject-specific hazard ratio (HR).  plot shows positive-stable frailty α\\alpha = 0.72 subject-specific HR flatter lower population average HR.","code":"plac.haz.ss <- subjspec_haz(      x = time.haz,                             knots = tvec.in,                            logk0 = logk0p,                               g0 = g0p,                        delta_vec = delta_vec_p)  vacc.haz.ss <- popavg_haz(      x = time.haz,                             knots = tvec.in,                            logk0 = logk0v,                               g0 = g0v,                        delta_vec = delta_vec_v)  plot  (time.haz, vacc.haz/plac.haz, type=\"l\", col=\"purple\", xlab=\"Days\",        ylab=\"Hazard Ratio\", lwd=2)  axis(1, at=c(tvec.in[1]))  lines  (time.haz, vacc.haz.ss/plac.haz.ss, type=\"l\", col=\"gold\", xlab=\"Days\",         lwd=2, lty=2) legend(\"topright\", c(\"Population HR\", \"Subject-specific HR\"),        col=c(\"purple\",\"gold\"),        lty=c(1,2),        lwd=2 )"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://swihart.github.io/mpw/articles/beta.html","id":"plot-population-avg-cdf","dir":"Articles","previous_headings":"Two knots","what":"Plot population avg CDF","title":"Burr-Weibull-Gamma","text":"Quick check fit","code":""},{"path":"https://swihart.github.io/mpw/articles/beta.html","id":"plot-population-avg-hr","dir":"Articles","previous_headings":"Two knots","what":"Plot population avg HR","title":"Burr-Weibull-Gamma","text":"uses parameters two step fitting procedure HR(0) = 1","code":""},{"path":"https://swihart.github.io/mpw/articles/beta.html","id":"add-subject-specific-hrs","dir":"Articles","previous_headings":"Two knots","what":"Add subject-specific HRs","title":"Burr-Weibull-Gamma","text":"flatten","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://swihart.github.io/mpw/articles/beta.html","id":"plot-population-avg-cdf-1","dir":"Articles","previous_headings":"Sixteen knots","what":"Plot population avg CDF","title":"Burr-Weibull-Gamma","text":"Quick check fit","code":""},{"path":"https://swihart.github.io/mpw/articles/beta.html","id":"plot-population-avg-hr-1","dir":"Articles","previous_headings":"Sixteen knots","what":"Plot population avg HR","title":"Burr-Weibull-Gamma","text":"uses parameters two step fitting procedure HR(0) = 1","code":""},{"path":"https://swihart.github.io/mpw/articles/beta.html","id":"add-subject-specific-hrs-1","dir":"Articles","previous_headings":"Sixteen knots","what":"Add subject-specific HRs","title":"Burr-Weibull-Gamma","text":"flatten","code":""},{"path":"https://swihart.github.io/mpw/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bruce Swihart. Author, maintainer.","code":""},{"path":"https://swihart.github.io/mpw/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Swihart B (2024). mpw: Marginalized Piecewise Weibull Frailty Models R. R package version 0.0.0.9000, https://swihart.github.io/mpw/.","code":"@Manual{,   title = {mpw: Marginalized Piecewise Weibull Frailty Models in R},   author = {Bruce Swihart},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://swihart.github.io/mpw/}, }"},{"path":"https://swihart.github.io/mpw/index.html","id":"mpw","dir":"","previous_headings":"","what":"Marginalized Piecewise Weibull Frailty Models in R","title":"Marginalized Piecewise Weibull Frailty Models in R","text":"goal mpw facilitate estimating Marginalized Piecewise Weibull Frailty Models R. articles webpage package work examples Marginalized Piecewise Weibull Frailty Models R. Please consult following articles: Weibull-Weibull-Positive Stable Burr-Weibull-Gamma Marginalized-Weibull-Inverse Gaussian Marginalized-Weibull-Two Point (fixed mean 1) Marginalized-Weibull-Two Point (unconstrained mean)","code":""},{"path":"https://swihart.github.io/mpw/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Marginalized Piecewise Weibull Frailty Models in R","text":"can install development version mpw GitHub :","code":"# install.packages(\"pak\") pak::pak(\"swihart/mpw\")"},{"path":"https://swihart.github.io/mpw/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Marginalized Piecewise Weibull Frailty Models in R","text":"basic examples.","code":""},{"path":"https://swihart.github.io/mpw/index.html","id":"psalphaalpha0-positive-stable-example","dir":"","previous_headings":"","what":"PS(α,α,0\\alpha,\\alpha,0) Positive Stable Example","title":"Marginalized Piecewise Weibull Frailty Models in R","text":"FαF_{\\alpha} referenced manuscript.","code":"library(mpw) ## This data resembles that in Thomas et al time<- c(0,14,28,42,56,70,84,98,112,126,140,154,168,182,196) F1  <- c(0,.18,.19,.22,.25,.27,.28,.34,.44,.50,.60,.72,.75,.81,.93)/100 F0  <- c(0,.29,.60,1,1.38,1.75,2.25,2.97,3.50,4.25,4.94,5.53,6.00,6.31,6.94)/100  tvec.in <- c(7, seq(14,max(time)-14,length.out=14),max(time)-7) init.vals <- c(log(2.4), -10, rep( 0,length(tvec.in)))   ## fit F_alpha for a given H_PARM H_PARM <- 0.72 fit_F_alpha <- function(x){mean((popavg_dist(time,                                              knots= tvec.in,                                              logk0=x[1],                                              g0=x[2],                                              delta_vec=x[-c(1,2)],                                             h_parm = H_PARM,                                             frailty=\"PS\")  - F0)^2) }   plac_fit_F_alpha <-    optim(init.vals, fit_F_alpha,         method=\"Nelder-Mead\",         control=list(maxit=1e8)) print(plac_fit_F_alpha) #> $par #>  [1]  -0.15799938 -10.12040145  -0.21508909   0.74768428   0.21589618 #>  [6]   0.03136962  -0.15528469   0.27388947   0.35359469   0.20431276 #> [11]  -0.03848921  -0.39518830   0.11877485  -0.05979150  -0.91393283 #> [16]  -0.27749430   0.54807831   1.84013113 #>  #> $value #> [1] 1.831274e-07 #>  #> $counts #> function gradient  #>     1239       NA  #>  #> $convergence #> [1] 0 #>  #> $message #> NULL  logk0p = plac_fit_F_alpha$par[1] g0p = plac_fit_F_alpha$par[2] delta_vec_p =plac_fit_F_alpha$par[-1*c(1,2)]    plot(time,       popavg_dist(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p, h_parm= H_PARM, frailty=\"PS\"),      type=\"l\") points(time, F0) ## plot the pop-avg (marginal) hazard: plot(time,      popavg_haz(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p, h_parm= H_PARM,                                             frailty=\"PS\"),      type=\"l\", ylim=c(0,1e-3))  ## plot the subject-specific hazard, fit in the presence ## of the h_parm value:  lines(time,      subjspec_haz(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p),      lty=2)"},{"path":"https://swihart.github.io/mpw/index.html","id":"gammabetabeta-example","dir":"","previous_headings":"","what":"Gamma(β,β\\beta,\\beta) Example","title":"Marginalized Piecewise Weibull Frailty Models in R","text":"FβF_{\\beta} referenced manuscript.","code":"library(mpw) ## This data resembles that in Thomas et al time<- c(0,14,28,42,56,70,84,98,112,126,140,154,168,182,196) F1  <- c(0,.18,.19,.22,.25,.27,.28,.34,.44,.50,.60,.72,.75,.81,.93)/100 F0  <- c(0,.29,.60,1,1.38,1.75,2.25,2.97,3.50,4.25,4.94,5.53,6.00,6.31,6.94)/100  tvec.in <- c(7, seq(14,max(time)-14,length.out=14),max(time)-7) init.vals <- c(log(2.4), -10, rep( 0,length(tvec.in)))  ## fit F_beta for a given H_PARM H_PARM <- 0.72 fit_F_beta <- function(x){mean((popavg_dist(time,                                              knots= tvec.in,                                              logk0=x[1],                                              g0=x[2],                                              delta_vec=x[-c(1,2)],                                             h_parm = H_PARM,                                             frailty=\"GA\")  - F0)^2) }   plac_fit_F_beta <-    optim(init.vals, fit_F_beta,         method=\"Nelder-Mead\",         control=list(maxit=1e8)) print(plac_fit_F_beta) #> $par #>  [1]   0.502079930 -10.040468476  -0.330061562   0.003865048  -0.336826948 #>  [6]  -0.024383734   0.250173132   0.439016976  -0.255277225  -0.234803012 #> [11]   1.061206688  -0.896795452   0.105126011  -0.138730813  -0.307526058 #> [16]  -0.739420915   1.018565747   1.429820594 #>  #> $value #> [1] 4.750979e-07 #>  #> $counts #> function gradient  #>      999       NA  #>  #> $convergence #> [1] 0 #>  #> $message #> NULL  logk0p = plac_fit_F_beta$par[1] g0p = plac_fit_F_beta$par[2] delta_vec_p =plac_fit_F_beta$par[-1*c(1,2)]    plot(time,       popavg_dist(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p, h_parm=H_PARM, frailty=\"GA\"),      type=\"l\") points(time, F0) ## plot the pop-avg (marginal) hazard: plot(time,      popavg_haz(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p, h_parm= H_PARM, frailty=\"GA\"),      type=\"l\", ylim=c(0,1e-3))  ## plot the subject-specific hazard, fit in the presence ## of the h_parm value:  lines(time,      subjspec_haz(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p),      lty=2)"},{"path":"https://swihart.github.io/mpw/index.html","id":"inverse-gaussian1lambda-example","dir":"","previous_headings":"","what":"Inverse Gaussian(1,λ1,\\lambda) Example","title":"Marginalized Piecewise Weibull Frailty Models in R","text":"FλF_{\\lambda} referenced manuscript. Fλ(x)=1−exp[−λ((1+2λexpη)12−1)]F_{\\lambda}(x) = 1-\\exp[- \\lambda ( (1+ \\frac{2}{\\lambda} \\exp\\eta )^{\\frac{1}{2}} - 1) ]","code":"library(mpw) ## This data resembles that in Thomas et al time<- c(0,14,28,42,56,70,84,98,112,126,140,154,168,182,196) F1  <- c(0,.18,.19,.22,.25,.27,.28,.34,.44,.50,.60,.72,.75,.81,.93)/100 F0  <- c(0,.29,.60,1,1.38,1.75,2.25,2.97,3.50,4.25,4.94,5.53,6.00,6.31,6.94)/100  tvec.in <- c(7, seq(14,max(time)-14,length.out=14),max(time)-7) init.vals <- c(log(2.4), -10, rep( 0,length(tvec.in)))   ## fit F_lambda for a given H_PARM H_PARM <- 0.72 fit_F_lambda <- function(x){mean((popavg_dist(time,                                              knots= tvec.in,                                              logk0=x[1],                                              g0=x[2],                                              delta_vec=x[-c(1,2)],                                             h_parm = H_PARM,                                             frailty=\"IG\")  - F0)^2) }   plac_fit_F_lambda <-    optim(init.vals, fit_F_lambda,         method=\"Nelder-Mead\",         control=list(maxit=1e8)) print(plac_fit_F_lambda) #> $par #>  [1]  0.519049948 -9.963880564 -0.548971978  0.009675958  0.114421179 #>  [6] -0.167680517  0.032601213  0.688049475 -0.746732555  0.412303893 #> [11]  0.728639433 -1.136741731  0.565512220 -0.328530329 -0.491673765 #> [16] -0.139534288  0.275973154  1.104640530 #>  #> $value #> [1] 2.955449e-07 #>  #> $counts #> function gradient  #>     1225       NA  #>  #> $convergence #> [1] 0 #>  #> $message #> NULL  logk0p = plac_fit_F_lambda$par[1] g0p = plac_fit_F_lambda$par[2] delta_vec_p =plac_fit_F_lambda$par[-1*c(1,2)]    plot(time,       popavg_dist(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p, h_parm=H_PARM, frailty=\"IG\"),      type=\"l\") points(time, F0) ## plot the pop-avg (marginal) hazard: plot(time,      popavg_haz(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p, h_parm=H_PARM, frailty=\"IG\"),      type=\"l\", ylim=c(0,1e-3))  ## plot the subject-specific hazard, fit in the presence ## of the h_parm value:  lines(time,      subjspec_haz(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p),      lty=2)"},{"path":"https://swihart.github.io/mpw/index.html","id":"two-pointrho-xi-example","dir":"","previous_headings":"","what":"Two-Point(ρ\\rho, ξ\\xi) Example","title":"Marginalized Piecewise Weibull Frailty Models in R","text":"FρF_{\\rho} referenced manuscript. Fρ(x)=1−((1−ρ)exp[−ξexpη]+ρexp[−ξ′expη])F_{\\rho}(x) =  1-             \\left(           (1-\\rho)  \\exp[- \\xi \\exp\\eta ] + \\rho \\exp[-\\xi^{\\prime} \\exp \\eta ] \\right)","code":"library(mpw) ## This data resembles that in Thomas et al time<- c(0,14,28,42,56,70,84,98,112,126,140,154,168,182,196) F1  <- c(0,.18,.19,.22,.25,.27,.28,.34,.44,.50,.60,.72,.75,.81,.93)/100 F0  <- c(0,.29,.60,1,1.38,1.75,2.25,2.97,3.50,4.25,4.94,5.53,6.00,6.31,6.94)/100  tvec.in <- c(7, seq(14,max(time)-14,length.out=14),max(time)-7) init.vals <- c(log(2.4), -10, rep( 0,length(tvec.in)))  ## fit F_rho for a given H_PARM and XI <1 ## (1-H_PARM) will have value XI < 1 ##    H_PARM  will have XI_prime > 1 that ensures E[u] = 1 H_PARM <- 0.1 XI <- 1/10 fit_F_rho <- function(x){mean((popavg_dist(time,                                              knots= tvec.in,                                              logk0=x[1],                                              g0=x[2],                                              delta_vec=x[-c(1,2)],                                             h_parm = H_PARM,                                             frailty=\"TP1\",                                             xi = XI)  - F0)^2) }   plac_fit_F_rho <-    optim(init.vals, fit_F_rho,         method=\"Nelder-Mead\",         control=list(maxit=1e8)) print(plac_fit_F_rho) #> $par #>  [1]  0.504788613 -9.907296470 -0.306067147 -0.209186119 -0.145926847 #>  [6] -0.254946042  0.822243872  0.007185863  0.087754729  0.002753200 #> [11]  0.214539410  0.111070205 -0.516003004  0.469736272 -1.126555327 #> [16]  0.332635368  0.617509128  0.509920955 #>  #> $value #> [1] 2.793263e-07 #>  #> $counts #> function gradient  #>     1111       NA  #>  #> $convergence #> [1] 0 #>  #> $message #> NULL  logk0p = plac_fit_F_rho$par[1] g0p = plac_fit_F_rho$par[2] delta_vec_p =plac_fit_F_rho$par[-1*c(1,2)]    plot(time,       popavg_dist(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p, h_parm=H_PARM,                   frailty=\"TP1\", xi = XI),      type=\"l\") points(time, F0) ## plot the pop-avg (marginal) hazard: plot(time,      popavg_haz(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p, h_parm=H_PARM,                  frailty=\"TP1\", xi=XI),      type=\"l\", ylim=c(0,1e-3))  ## plot the subject-specific hazard, fit in the presence ## of the h_parm value:  lines(time,      subjspec_haz(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p),      lty=2)"},{"path":"https://swihart.github.io/mpw/index.html","id":"two-pointomega-n-s-example","dir":"","previous_headings":"","what":"Two-Point(ω\\omega, nn, ss) Example","title":"Marginalized Piecewise Weibull Frailty Models in R","text":"FωF_{\\omega} referenced manuscript.","code":"library(mpw) ## This data resembles that in Thomas et al time<- c(0,14,28,42,56,70,84,98,112,126,140,154,168,182,196) F1  <- c(0,.18,.19,.22,.25,.27,.28,.34,.44,.50,.60,.72,.75,.81,.93)/100 F0  <- c(0,.29,.60,1,1.38,1.75,2.25,2.97,3.50,4.25,4.94,5.53,6.00,6.31,6.94)/100  tvec.in <- c(7, seq(14,max(time)-14,length.out=14),max(time)-7) init.vals <- c(log(2.4), -10, rep( 0,length(tvec.in)))  ## fit F_omega for a given H_PARM and N<1 and S>1 ## (1-H_PARM) will have value N < 1 ##    H_PARM  will have value S > 1  H_PARM <- 0.5 N <- 0.25 S <- 4.00 fit_F_omega <- function(x){mean((popavg_dist(time,                                              knots= tvec.in,                                              logk0=x[1],                                              g0=x[2],                                              delta_vec=x[-c(1,2)],                                             h_parm = H_PARM,                                             frailty=\"TPU\",                                             n=N,                                             s=S)  - F0)^2) }   plac_fit_F_omega <-    optim(init.vals, fit_F_omega,         method=\"Nelder-Mead\",         control=list(maxit=1e8)) print(plac_fit_F_omega) #> $par #>  [1]  0.48099077 -9.97182403 -0.91909126  0.05937541  0.33699959 -0.01413072 #>  [7] -0.17026103  0.81246434 -0.14277889 -0.04705732  0.03813736 -0.45175104 #> [13]  1.01934966 -1.27666904  0.08861910 -0.51736433  0.95470678  0.83804581 #>  #> $value #> [1] 3.751629e-07 #>  #> $counts #> function gradient  #>     1035       NA  #>  #> $convergence #> [1] 0 #>  #> $message #> NULL  logk0p = plac_fit_F_omega$par[1] g0p = plac_fit_F_omega$par[2] delta_vec_p =plac_fit_F_omega$par[-1*c(1,2)]    plot(time,       popavg_dist(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p, h_parm=H_PARM, frailty=\"TPU\",                  n=N, s=S),      type=\"l\") points(time, F0) ## plot the pop-avg (marginal) hazard: plot(time,      popavg_haz(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p, h_parm=H_PARM,                  frailty=\"TPU\", n=0.25, s=4.00),      type=\"l\", ylim=c(0,1e-3))  ## plot the subject-specific hazard, fit in the presence ## of the h_parm value:  lines(time,      subjspec_haz(time, knots=tvec.in, logk0=logk0p, g0=g0p,                   delta_vec = delta_vec_p),      lty=2)"},{"path":"https://swihart.github.io/mpw/reference/popavg_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Population average distribution function — popavg_dist","title":"Population average distribution function — popavg_dist","text":"Population average distribution function","code":""},{"path":"https://swihart.github.io/mpw/reference/popavg_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population average distribution function — popavg_dist","text":"","code":"popavg_dist(   x,   knots,   logk0 = -0.1,   g0 = 0.1,   delta_vec,   h_parm = 1,   frailty = \"PS\",   xi = 0.99,   n = 0.99,   s = 1.01 )"},{"path":"https://swihart.github.io/mpw/reference/popavg_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population average distribution function — popavg_dist","text":"x domain function; survival times. knots vector internal knots change-points. Must within range (min(x), max(x)). logk0 log shape parameter first piece. g0 shape parameter. delta_vec vector delta parameters, order. h_parm heterogeneity parameter homogeneity parameter.  decide h stands . frailty character matching \"PS\" positive stable (alpha case paper), \"GA\" gamma (beta), \"IG\" Inverse Gaussian (lambda), \"TP1\" (rho) two point mean 1, \"TPU\" two point unrestricted (omega). xi scalar less 1 frailty=\"TP1\" case. n scalar less 1 frailty=\"TPU\" case. s scalar 1 frailty=\"TPU\" case.","code":""},{"path":"https://swihart.github.io/mpw/reference/popavg_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population average distribution function — popavg_dist","text":"Value","code":""},{"path":"https://swihart.github.io/mpw/reference/popavg_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population average distribution function — popavg_dist","text":"","code":"rnorm(1) #> [1] -1.400044"},{"path":"https://swihart.github.io/mpw/reference/popavg_haz.html","id":null,"dir":"Reference","previous_headings":"","what":"Population average hazard function — popavg_haz","title":"Population average hazard function — popavg_haz","text":"Population average hazard function","code":""},{"path":"https://swihart.github.io/mpw/reference/popavg_haz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population average hazard function — popavg_haz","text":"","code":"popavg_haz(   x,   knots,   logk0 = -0.1,   g0 = 0.1,   delta_vec,   h_parm = 1,   frailty = \"PS\",   xi = 0.99,   n = 0.99,   s = 1.01 )"},{"path":"https://swihart.github.io/mpw/reference/popavg_haz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population average hazard function — popavg_haz","text":"x domain function; survival times. knots vector internal knots change-points. Must within range (min(x), max(x)). logk0 log shape parameter first piece. g0 shape parameter. delta_vec vector delta parameters, order. h_parm heterogeneity parameter homogeneity parameter.  decide h stands . frailty character matching \"PS\" positive stable (alpha case paper), \"GA\" gamma (beta), \"IG\" Inverse Gaussian (lambda), \"TP1\" (rho) two point mean 1, \"TPU\" two point unrestricted (omega). xi scalar less 1 frailty=\"TP1\" case. n scalar less 1 frailty=\"TPU\" case. s scalar 1 frailty=\"TPU\" case.","code":""},{"path":"https://swihart.github.io/mpw/reference/popavg_haz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population average hazard function — popavg_haz","text":"Value","code":""},{"path":"https://swihart.github.io/mpw/reference/popavg_haz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population average hazard function — popavg_haz","text":"","code":"rnorm(1) #> [1] 0.2553171"},{"path":"https://swihart.github.io/mpw/reference/subjspec_haz.html","id":null,"dir":"Reference","previous_headings":"","what":"Subject specific hazard function — subjspec_haz","title":"Subject specific hazard function — subjspec_haz","text":"Take parameters estimated popavg_dist calculate subject specific hazards Weibull form b*k*x^(k-1).","code":""},{"path":"https://swihart.github.io/mpw/reference/subjspec_haz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subject specific hazard function — subjspec_haz","text":"","code":"subjspec_haz(x, knots, logk0 = -0.1, g0 = 0.1, delta_vec)"},{"path":"https://swihart.github.io/mpw/reference/subjspec_haz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subject specific hazard function — subjspec_haz","text":"x domain function; survival times. knots vector internal knots change-points. Must within range (min(x), max(x)). logk0 log shape parameter first piece. g0 shape parameter. delta_vec vector delta parameters, order.","code":""},{"path":"https://swihart.github.io/mpw/reference/subjspec_haz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subject specific hazard function — subjspec_haz","text":"Value","code":""},{"path":"https://swihart.github.io/mpw/reference/subjspec_haz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subject specific hazard function — subjspec_haz","text":"","code":"rnorm(1) #> [1] -2.437264"}]
